import { Hasher, InjectorConfig, Injector, ConfigurationOptions, Instance, Prefixer, Mode, PluginApply, Declarations, ClassNameCreator, ThemeResolver } from '@beamwind/types';

declare const cyrb32: Hasher;

/**
 * Creates an injector which collects style rules during server-side rendering.
 */
declare const virtualInjector: ({ target }?: InjectorConfig<string[]>) => Injector<string[]>;
/**
 * Creates an injector which inserts style rules through the CSS Object Model.
 */
declare const cssomInjector: ({ nonce, target, }?: InjectorConfig<CSSStyleSheet>) => Injector<CSSStyleSheet>;
/**
 * An injector placeholder which performs no operations. Useful for avoiding errors in a non-browser environment.
 */
declare const noOpInjector: () => Injector<null>;

declare const createInstance: (options?: ConfigurationOptions | ConfigurationOptions[] | undefined) => Instance;

declare const autoprefix: Prefixer;
declare const noprefix: Prefixer;

declare const mode: (report: (message: string) => void) => Mode;
declare const warn: Mode;
declare const strict: Mode;

declare const join: (parts: readonly string[], separator?: string) => string;
declare const tail: <T extends string | readonly unknown[]>(array: T, startIndex?: number) => T;

declare const apply: PluginApply;
declare const corners: (value: string | string[] | undefined, position: string, prefix?: string | undefined, suffix?: string | undefined) => Declarations | undefined;
declare const expandEdges: (key: string) => string[] | undefined;
declare const edges: (value: string | string[] | undefined, position: string, prefix?: string | undefined, suffix?: string | undefined) => Declarations | undefined;

declare const bw: ClassNameCreator;
declare const setup: (options?: ConfigurationOptions | ConfigurationOptions[] | undefined) => void;
declare const theme: ThemeResolver;

export { apply, autoprefix, bw, corners, createInstance, cssomInjector, cyrb32, edges, expandEdges, join, mode, noOpInjector, noprefix, setup, strict, tail, theme, virtualInjector, warn };
//# sourceMappingURL=core.d.ts.map
