{
  "version": 3,
  "sources": ["../../src/is.ts", "../../src/util.ts", "../../src/css.ts", "../../src/env.ts", "../../src/injectors.ts", "../../src/theme.ts", "../../src/prefix.ts", "../../src/hash.ts", "../../src/variants.ts", "../../src/precedence.ts", "../../src/helpers.ts", "../../src/plugins.ts", "../../src/modes.ts", "../../src/context.ts", "../../src/process.ts", "../../src/instance.ts", "../../src/index.ts"],
  "sourcesContent": ["const is = (value: unknown, type: string): boolean => typeof value === type\n\nexport const string = (value: unknown): value is string => is(value, 'string')\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const object = (value: unknown): value is object => value != null && is(value, 'object')\n\nexport const array = Array.isArray\n\n// eslint-disable-next-line unicorn/prevent-abbreviations, @typescript-eslint/ban-types\nconst fn = <T extends Function>(value: unknown): value is T => is(value, 'function')\n\nexport { fn as function }\n", "import type { Falsy, Token } from './types'\n\nimport * as is from './is'\n\nexport const join = (parts: readonly string[], separator = '-'): string => parts.join(separator)\n\nexport const joinTruthy = (parts: readonly (string | Falsy)[], separator?: string): string =>\n  join(parts.filter(Boolean) as string[], separator)\n\nexport const tail = <T extends string | readonly unknown[]>(array: T, startIndex = 1): T =>\n  array.slice(startIndex) as T\n\nexport const identity = <T>(value: T): T => value\n\nexport const capitalize = (value: string): string => value[0].toUpperCase() + tail(value)\n\nconst uppercasePattern = /([A-Z])/g\nconst prefixAndLowerCase = (char: string): string => `-${char.toLowerCase()}`\nexport const hyphenate = (value: string): string => value.replace(uppercasePattern, prefixAndLowerCase)\n\n\nexport interface Cache<V> {\n  has(key: string): boolean\n  get(key: string): V | undefined\n  set(key: string, value: V): void\n}\n\nexport const createCache = <V>(): Cache<V> => {\n  if (typeof Map === 'function') {\n    return new Map()\n  }\n\n  const store = Object.create(null) as Record<string, V>\n\n  return {\n    has(key) {\n      return key in store\n    },\n\n    get(key) {\n      return store[key]\n    },\n\n    set(key, value) {\n      store[key] = value\n    },\n  }\n}\n\nconst interleave = (strings: TemplateStringsArray, interpolations: Token[]): Token[] => {\n  const result: Token[] = [strings[0]]\n\n  for (let index = 0; index < interpolations.length; ) {\n    // Join consecutive strings\n    if (is.string(interpolations[index])) {\n      ;(result[result.length - 1] as string) += (interpolations[index] as string) + strings[++index]\n    } else {\n      if (interpolations[index]) {\n        result.push(interpolations[index])\n      }\n\n      result.push(strings[++index])\n    }\n  }\n\n  return result\n}\n\nexport const asTokens = (tokens: unknown[]): Token[] =>\n  is.array(tokens[0]) && is.array(((tokens[0] as unknown) as TemplateStringsArray).raw)\n    ? interleave((tokens[0] as unknown) as TemplateStringsArray, tail(tokens) as Token[])\n    : (tokens as Token[])\n\n/**\n * Find the array index of where to add an element to keep it sorted.\n *\n * @returns The insertion index\n */\nexport const sortedInsertionIndex = (array: readonly number[], element: number): number => {\n  let high = array.length\n\n  // Theres only one option then\n  if (high === 0) return 0\n\n  // Find position by binary search\n  for (let low = 0; low < high; ) {\n    const pivot = (high + low) >> 1\n\n    // Less-Then-Equal to add new equal element after all existing equal elements (stable sort)\n    if (array[pivot] <= element) {\n      low = pivot + 1\n    } else {\n      high = pivot\n    }\n  }\n\n  return high\n}\n\nexport const merge = <A, B>(a: A, b: Partial<B> | undefined): A & B =>\n  (a && b ? { ...a, ...b } : a || b || {}) as A & B\n", "import type { SelectorDecorator } from './types'\nimport { join, tail } from './util'\n\nexport const escape =\n  (typeof CSS !== 'undefined' && CSS.escape) ||\n  // Simplified: escaping only special characters\n  ((className: string): string => className.replace(/[!\"#$%&'()*+,./:;<=>?@[\\]^`{|}~]/g, '\\\\$&'))\n\nconst isGroupVariant = (variant: string): boolean => variant.slice(0, 7) === ':group-'\nconst isPseudoVariant = (variant: string): boolean => variant[0] === ':' && !isGroupVariant(variant)\nexport const isAtRuleVariant = (variant: string): boolean => variant[0] === '@'\n\nexport const toClassName = (token: string, variants: readonly string[]): string => {\n  const base = join(variants, '')\n\n  return (base && tail(base) + ':') + token\n}\n\nconst createSelector = (\n  className: string,\n  variants: readonly string[],\n  selectorDecorator: SelectorDecorator,\n  tag: (token: string) => string,\n): string =>\n  selectorDecorator(\n    // eslint-disable-next-line unicorn/no-reduce\n    variants.reduce(\n      (selector, variant) =>\n        // .group:hover .group-hover\\:text-gray-500\n        (isGroupVariant(variant) ? `.${escape(tag('group'))}:${tail(variant, 7)} ` : '') +\n        selector +\n        (isPseudoVariant(variant) ? variant : ''),\n      '.' + escape(className),\n    ),\n  )\n\nexport const createRule = (\n  className: string,\n  variants: readonly string[],\n  declaration: string,\n  selectorDecorator: SelectorDecorator,\n  tag: (token: string) => string,\n): string => // eslint-disable-line max-params\n  // eslint-disable-next-line unicorn/no-reduce\n  variants.reduceRight(\n    (rule, variant) => (isAtRuleVariant(variant) ? `${variant}{${rule}}` : rule),\n    `${createSelector(className, variants, selectorDecorator, tag)}{${declaration}}`,\n  )\n", "export const isBrowser = typeof window !== 'undefined'\n", "// Based on https://github.com/kripod/otion/blob/main/packages/otion/src/injectors.ts\n// License MIT\nimport type { InjectorConfig, Injector } from './types'\n\nconst STYLE_ELEMENT_ID = '__beamwind'\n\nconst getStyleElement = (nonce?: string): HTMLStyleElement => {\n  // Hydrate existing style element if available\n  // eslint-disable-next-line unicorn/prefer-query-selector\n  let element = document.getElementById(STYLE_ELEMENT_ID) as HTMLStyleElement | null\n\n  if (!element) {\n    // Create a new one otherwise\n    element = document.createElement('style')\n\n    element.id = STYLE_ELEMENT_ID\n    nonce && (element.nonce = nonce)\n\n    // eslint-disable-next-line unicorn/prefer-node-append\n    document.head.appendChild(element)\n  }\n\n  return element\n}\n\n/**\n * Creates an injector which collects style rules during server-side rendering.\n */\nexport const virtualInjector = ({ target = [] }: InjectorConfig<string[]> = {}): Injector<\n  string[]\n> => ({\n  target,\n  insert: (rule, index) => target.splice(index, 0, rule),\n})\n\n/**\n * Creates an injector which inserts style rules through the CSS Object Model.\n */\nexport const cssomInjector = ({\n  nonce,\n  target = getStyleElement(nonce).sheet as CSSStyleSheet,\n}: InjectorConfig<CSSStyleSheet> = {}): Injector<CSSStyleSheet> => ({\n  target,\n  insert: target.insertRule.bind(target),\n})\n\n/**\n * An injector placeholder which performs no operations. Useful for avoiding errors in a non-browser environment.\n */\nexport const noOpInjector = (): Injector<null> => ({\n  target: null,\n  insert: () => {\n    /* No-Op */\n  },\n})\n", "import type {\n  Theme,\n  PartialTheme,\n  ThemeConfiguration,\n  ThemeResolver,\n  ThemeSectionResolverContext,\n  ThemeExtend,\n} from './types'\n\nimport * as is from './is'\n\nimport { createCache, merge } from './util'\n\nconst resolveContext: ThemeSectionResolverContext = {\n  breakpoints: (source: Record<string, string | undefined>): Record<string, string | undefined> =>\n    // eslint-disable-next-line unicorn/no-reduce\n    Object.keys(source).reduce((target, key) => {\n      target['screen-' + key] = source[key]\n\n      return target\n    }, {} as Record<string, string | undefined>),\n}\n\ninterface ExtendableThemeResolver extends ThemeResolver {\n  extend: (overrides?: ThemeConfiguration) => ExtendableThemeResolver\n}\n\nconst createThemeResolver = (source: Theme, extend: ThemeExtend): ExtendableThemeResolver => {\n  const cache = createCache<Record<string, unknown>>()\n\n  const resolveSection = (\n    object: Partial<Theme>,\n    section: keyof Theme,\n  ): Record<string, unknown> | undefined => {\n    const base = object[section]\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return (is.function(base) ? base(resolver, resolveContext) : base) as Record<string, unknown>\n  }\n\n  const resolver = ((section: keyof Theme, key?: string, defaultValue?: unknown) => {\n    let base = cache.get(section)\n\n    if (!base) {\n      base = merge(resolveSection(source, section), resolveSection(extend, section)) as Record<\n        string,\n        unknown\n      >\n      cache.set(section, base)\n    }\n\n    if (key) {\n      let value = base[key]\n\n      if (is.function(value)) {\n        value = value(resolver, resolveContext)\n      }\n\n      return value == null ? defaultValue : value\n    }\n\n    return base\n  }) as ExtendableThemeResolver\n\n  resolver.extend = (overrides?: ThemeConfiguration) => {\n    overrides = is.function(overrides) ? overrides(resolver) : overrides\n\n    return createThemeResolver(\n      merge(source, overrides),\n      overrides && overrides.extend\n        ? // eslint-disable-next-line unicorn/no-reduce\n          Object.keys(overrides.extend).reduce((extend, section) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            extend[section as keyof ThemeExtend] = merge(\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              extend[section as keyof ThemeExtend] as any,\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n              ((overrides as PartialTheme).extend as any)[section as keyof ThemeExtend],\n            )\n\n            return extend\n          }, merge<ThemeExtend, ThemeExtend>({}, extend))\n        : extend,\n    )\n  }\n\n  return resolver\n}\n\n// See\n// - https://tailwindcss.com/docs/theme\n// - https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js\nexport const theme = createThemeResolver(\n  {\n    screens: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n      '2xl': '1536px',\n    },\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n    },\n    durations: {},\n    spacing: {\n      px: '1px',\n      0: '0px',\n    },\n\n    animation: {\n      none: 'none',\n    },\n\n    backgroundColor: (theme) => theme('colors'),\n    backgroundImage: {\n      none: 'none',\n    },\n    backgroundOpacity: (theme) => theme('opacity'),\n    borderColor: (theme) => ({\n      ...theme('colors'),\n      DEFAULT: 'currentColor',\n    }),\n    borderOpacity: (theme) => theme('opacity'),\n    borderRadius: {\n      none: '0px',\n      DEFAULT: '0.25rem',\n      full: '9999px',\n    },\n    borderWidth: {\n      DEFAULT: '1px',\n    },\n    boxShadow: {\n      none: '0 0 transparent',\n    },\n    divideColor: (theme) => theme('borderColor'),\n    divideOpacity: (theme) => theme('borderOpacity'),\n    divideWidth: (theme) => theme('borderWidth'),\n    fill: { current: 'currentColor' },\n    flex: {\n      1: '1 1 0%',\n      auto: '1 1 auto',\n      initial: '0 1 auto',\n      none: 'none',\n    },\n    fontFamily: {\n      sans: 'ui-sans-serif,system-ui,sans-serif',\n      serif: 'ui-serif,serif',\n      mono: 'ui-monospace,monospace',\n    },\n    fontSize: {\n      xs: ['0.75rem', { lineHeight: '1rem' }],\n      sm: ['0.875rem', { lineHeight: '1.25rem' }],\n      base: ['1rem', { lineHeight: '1.5rem' }],\n      lg: ['1.125rem', { lineHeight: '1.75rem' }],\n      xl: ['1.25rem', { lineHeight: '1.75rem' }],\n      '2xl': ['1.5rem', { lineHeight: '2rem' }],\n      '3xl': ['1.875rem', { lineHeight: '2.25rem' }],\n      '4xl': ['2.25rem', { lineHeight: '2.5rem' }],\n      '5xl': ['3rem', { lineHeight: '1' }],\n      '6xl': ['3.75rem', { lineHeight: '1' }],\n      '7xl': ['4.5rem', { lineHeight: '1' }],\n      '8xl': ['6rem', { lineHeight: '1' }],\n      '9xl': ['8rem', { lineHeight: '1' }],\n    },\n    fontWeight: {\n      thin: '100',\n      extralight: '200',\n      light: '300',\n      normal: '400',\n      medium: '500',\n      semibold: '600',\n      bold: '700',\n      extrabold: '800',\n      black: '900',\n    },\n    gap: (theme) => theme('spacing'),\n    gradientColorStops: (theme) => theme('colors'),\n    height: (theme) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      full: '100%',\n      screen: '100vh',\n    }),\n    inset: (theme) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      full: '100%',\n    }),\n    keyframes: {},\n    letterSpacing: {\n      tighter: '-0.05em',\n      tight: '-0.025em',\n      normal: '0em',\n      wide: '0.025em',\n      wider: '0.05em',\n      widest: '0.1em',\n    },\n    lineHeight: {\n      none: '1',\n      tight: '1.25',\n      snug: '1.375',\n      normal: '1.5',\n      relaxed: '1.625',\n      loose: '2',\n    },\n    margin: (theme) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n    }),\n    maxHeight: (theme) => ({\n      ...theme('spacing'),\n      full: '100%',\n      screen: '100vh',\n    }),\n    maxWidth: (theme, { breakpoints }) => ({\n      none: 'none',\n      0: '0rem',\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n      ...breakpoints(theme('screens')),\n    }),\n    minHeight: {\n      0: '0px',\n      full: '100%',\n      screen: '100vh',\n    },\n    minWidth: {\n      0: '0px',\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n    },\n    opacity: {\n      0: '0',\n      25: '0.25',\n      50: '0.5',\n      75: '0.75',\n      100: '1',\n    },\n    order: {\n      first: '-9999',\n      last: '9999',\n      none: '0',\n    },\n    outline: {\n      none: ['2px solid transparent', '2px'],\n    },\n    padding: (theme) => theme('spacing'),\n    placeholderColor: (theme) => theme('colors'),\n    placeholderOpacity: (theme) => theme('opacity'),\n    ringColor: (theme) => theme('colors'),\n    ringOffsetColor: (theme) => theme('colors'),\n    ringOffsetWidth: {},\n    ringOpacity: (theme) => theme('opacity'),\n    ringWidth: {\n      DEFAULT: '3px',\n    },\n    rotate: {},\n    scale: {},\n    skew: {},\n    space: (theme) => theme('spacing'),\n    stroke: {\n      current: 'currentColor',\n    },\n    strokeWidth: {},\n    textColor: (theme) => theme('colors'),\n    textOpacity: (theme) => theme('opacity'),\n    transitionDuration: (theme) => ({\n      DEFAULT: '150ms',\n      ...theme('durations'),\n    }),\n    transitionDelay: (theme) => theme('durations'),\n    transitionProperty: {\n      none: 'none',\n      all: 'all',\n      DEFAULT: 'background-color,border-color,color,fill,stroke,opacity,box-shadow,transform',\n      colors: 'background-color,border-color,color,fill,stroke',\n      opacity: 'opacity',\n      shadow: 'box-shadow',\n      transform: 'transform',\n    },\n    transitionTimingFunction: {\n      DEFAULT: 'cubic-bezier(0.4,0,0.2,1)',\n    },\n    translate: (theme) => ({\n      ...theme('spacing'),\n      full: '100%',\n    }),\n    width: (theme) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      full: '100%',\n      screen: '100vw',\n      min: 'min-content',\n      max: 'max-content',\n    }),\n    zIndex: {\n      auto: 'auto',\n    },\n  },\n  {},\n)\n", "import type { Prefixer } from './types'\n\nimport { prefixProperty, prefixValue } from 'tiny-css-prefixer'\n\nexport const autoprefix: Prefixer = (property: string, value: string): string => {\n  const declaration = `${property}:${prefixValue(property, value)}`\n  let cssText = declaration\n  const flag = prefixProperty(property)\n  if (flag & 0b001) cssText += `;-ms-${declaration}`\n  if (flag & 0b010) cssText += `;-moz-${declaration}`\n  if (flag & 0b100) cssText += `;-webkit-${declaration}`\n  return cssText\n}\n\nexport const noprefix: Prefixer = (property: string, value: string): string =>\n  `${property}:${value}`\n", "import type { Hasher } from './types'\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\nconst imul =\n  Math.imul ||\n  ((opA: number, opB: number): number => {\n    /* eslint-disable unicorn/prefer-math-trunc */\n    // Ensure that opB is an integer. opA will automatically be coerced.\n    opB |= 0\n\n    // Floating points give us 53 bits of precision to work with plus 1 sign bit\n    // automatically handled for our convienence:\n    // 1. 0x003fffff /*opA & 0x000fffff*/ * 0x7fffffff /*opB*/ = 0x1fffff7fc00001\n    //    0x1fffff7fc00001 < Number.MAX_SAFE_INTEGER /*0x1fffffffffffff*/\n    let result = (opA & 0x003fffff) * opB\n\n    // 2. We can remove an integer coersion from the statement above because:\n    //    0x1fffff7fc00001 + 0xffc00000 = 0x1fffffff800001\n    //    0x1fffffff800001 < Number.MAX_SAFE_INTEGER /*0x1fffffffffffff*/\n    if (opA & 0xffc00000 /* !== 0 */) result += ((opA & 0xffc00000) * opB) | 0\n\n    return result | 0\n    /* eslint-enable unicorn/prefer-math-trunc */\n  })\n\n// Based on https://stackoverflow.com/a/52171480\nexport const cyrb32: Hasher = (value: string): string => {\n  let h = 9\n\n  for (let index = value.length; index--; ) {\n    h = imul(h ^ value.charCodeAt(index), 0x5f356495)\n  }\n\n  return '_' + ((h ^ (h >>> 9)) >>> 0).toString(36)\n}\n", "import type { ThemeResolver } from './types'\nimport { tail } from './util'\n\nlet size: string | undefined\n\nconst variants: Record<string, string> = {\n  ':dark': '@media (prefers-color-scheme:dark)',\n  ':sticky': '@supports ((position: -webkit-sticky) or (position:sticky))',\n  ':motion-reduce': '@media (prefers-reduced-motion:reduce)',\n  ':motion-safe': '@media (prefers-reduced-motion:no-preference)',\n  ':first': ':first-child',\n  ':last': ':last-child',\n  ':even': ':nth-child(2n)',\n  ':odd': ':nth-child(odd)',\n}\n\n/* eslint-disable no-return-assign, no-cond-assign */\nexport const createVariant = (variant: string, theme: ThemeResolver): string =>\n  (size = theme('screens', tail(variant)))\n    ? `@media (min-width: ${size})`\n    : variants[variant] || variant\n/* eslint-enable no-return-assign, no-cond-assign */\n", "// Based on https://github.com/kripod/otion\n// License MIT\n\nimport type { Declarations } from './types'\n\nimport { isAtRuleVariant } from './css'\nimport { join, tail } from './util'\n\n// Shared variables\nlet precedence: number\nlet match: RegExpExecArray | null\n\n// 0=none, 1=sm, 2=md, 3=lg, 4=xl, 5=2xl, 6=??, 7=??\n// 0 - 31: 5 bits\n//  576px -> 3\n// 1536px -> 9\n// 36rem -> 3\n// 96rem -> 9\n// eslint-disable-next-line no-return-assign\nconst responsivePrecedence = (css: string): number =>\n  // eslint-disable-next-line no-cond-assign\n  (match = /\\(\\s*min-width:\\s*(\\d+(?:.\\d+)?)(p)?/.exec(css))\n    ? +match[1] / (match[2] ? 15 : 1) / 10 // eslint-disable-line no-implicit-coercion\n    : 0\n\n// Colon and dash count of string (ascending): 0 -> 7 => 3 bits\nconst seperatorPrecedence = (string: string): number => {\n  precedence = 0\n\n  for (let index = string.length; index--; ) {\n    // eslint-disable-next-line no-implicit-coercion\n    if (~'-:,'.indexOf(string[index])) {\n      ++precedence\n    }\n  }\n\n  return precedence\n}\n\n// Pesude and groupd variant presedence\n// Chars 3 - 8: Uniquely identifies a pseudo selector\n// represented as a bit set for each relevant value\n// 16 bits: one for each variant above plus one for unknown variants\n\n// Sources:\n// - https://bitsofco.de/when-do-the-hover-focus-and-active-pseudo-classes-apply/#orderofstyleshoverthenfocusthenactive\n// - https://developer.mozilla.org/docs/Web/CSS/:active#Active_links\n// - https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js#L718\n\n/* eslint-disable capitalized-comments */\nconst PRECEDENCES_BY_PSEUDO_CLASS = [\n  /* fi */ 'rst' /* : 0 */,\n  /* la */ 'st' /* : 1 */,\n  // ':even': 'nth-child(2n)',\n  // ':odd': 'nth-child(odd)',\n  /* nt */ 'h-chi' /* h-child(odd): 2 */,\n  /* li */ 'nk' /* : 3 */,\n  /* vi */ 'sited' /* : 4 */,\n  /* em */ 'pty' /* : 5 */,\n  /* ch */ 'ecked' /* : 6 */,\n  /* gr */ 'oup-h' /* over : 7 */,\n  /* gr */ 'oup-f' /* ocus : 8 */,\n  /* fo */ 'cus-w' /* ithin : 9 */,\n  /* ho */ 'ver' /* : 10 */,\n  /* fo */ 'cus' /* : 11 */,\n  /* fo */ 'cus-v' /* isible : 12 */,\n  /* ac */ 'tive' /* : 13 */,\n  /* di */ 'sable' /* d : 14 */,\n]\n/* eslint-enable capitalized-comments */\n\n// eslint-disable-next-line no-return-assign\nconst pseudoPrecedence = (pseudoClass: string): number =>\n  ~(precedence = PRECEDENCES_BY_PSEUDO_CLASS.indexOf(pseudoClass.slice(3, 8)))\n    ? precedence\n    : PRECEDENCES_BY_PSEUDO_CLASS.length\n\nconst accumulatePseudoPrecedence = (precedence: number, variant: string): number => {\n  return precedence | (isAtRuleVariant(variant) ? 0 : 1 << pseudoPrecedence(variant))\n}\n\n// https://github.com/kripod/otion/blob/main/packages/otion/src/propertyMatchers.ts\n// \"+1\": [\n// \t/* ^border-.*(w|c|sty) */\n// \t\"border-.*(width,color,style)\",\n\n// \t/* ^[tlbr].{2,4}m?$ */\n// \t\"top\",\n// \t\"left\",\n// \t\"bottom\",\n// \t\"right\",\n\n// \t/* ^c.{7}$ */\n// \t\"continue\",\n// ],\n\n// \"-1\": [\n// \t/* ^[fl].{5}l */\n// \t\"flex-flow\",\n// \t\"line-clamp\",\n\n// \t/* ^g.{8}$ */\n// \t\"grid-area\",\n\n// \t/* ^pl */\n// \t\"place-content\",\n// \t\"place-items\",\n// \t\"place-self\",\n// ],\n\n// group: 1 => +1\n// group: 2 => -1\nconst PROPERTY_PRECEDENCE_CORRECTION_GROUPS = /^(?:(border-(?:[tlbr].{2,4}-)?(?:w|c|sty)|[tlbr].{2,4}m?$|c.{7}$)|([fl].{5}l|g.{8}$|pl))/\n\n// 0 - 15 => 4 bits\nconst propertyPrecedence = (property: string): number => {\n  // The property's baseline precedence is based on \"-\" counting\n  const unprefixedProperty =\n    property[0] === '-' ? tail(property, property.indexOf('-', 1) + 1) : property\n\n  const match = PROPERTY_PRECEDENCE_CORRECTION_GROUPS.exec(unprefixedProperty)\n\n  return (\n    seperatorPrecedence(unprefixedProperty) +\n    // eslint-disable-next-line no-implicit-coercion\n    (match ? +!!match[1] /* +1 */ || -!!match[2] /* -1 */ : 0) +\n    1\n  )\n}\n\n// 0 - 15 => 4 bits\n// Ignore vendor prefixed and custom properties\nconst declarationPropertyPrecedence = (property: string): number =>\n  property[0] === '-' ? 0 : propertyPrecedence(property)\n\nconst descending = (value: number): number => Math.max(0, 15 - value)\n\n// 0 - 15 => 4 bits\nconst declarationValuePrecedence = (property: string, value: string): number =>\n  descending(seperatorPrecedence(value))\n\n// 0 - 15 => 4 bits\nconst declarationsCountPrecedence = (declarations: Declarations): number =>\n  descending(Object.keys(declarations).filter((property) => declarations[property]).length)\n\nconst max = (\n  declarations: Declarations,\n  iteratee: (property: string, value: string) => number,\n): number =>\n  // eslint-disable-next-line unicorn/no-reduce\n  Object.keys(declarations).reduce(\n    (result, property) =>\n      declarations[property]\n        ? Math.max(result, iteratee(property, declarations[property] as string))\n        : result,\n    0,\n  )\n\nexport const calculatePrecedence = (\n  darkMode: boolean,\n  variantsCss: readonly string[],\n  declarations: Declarations,\n): number => {\n  const rp = responsivePrecedence(variantsCss[0] || '')\n\n  // 38 bits\n  return (\n    // Variants: 25 bits\n    // 5: responsive\n    (((rp & 31) << 21) |\n      // 1: dark mode flag\n      // eslint-disable-next-line no-implicit-coercion\n      (+darkMode << 20) |\n      // 4: precedence of other at-rules\n      ((seperatorPrecedence(\n        join((rp ? tail(variantsCss) : variantsCss).filter(isAtRuleVariant), ';'),\n      ) &\n        15) <<\n        16) |\n      // 16: pseudo and group variants\n      // eslint-disable-next-line unicorn/no-reduce\n      (variantsCss.reduce(accumulatePseudoPrecedence, 0) & 0xffff)) *\n      // Declarations: 12 bits = 4096\n      (1 << 12) +\n    // 4: number of declarations (descending)\n    (((declarationsCountPrecedence(declarations) & 15) << 8) |\n      // 4: greatest precedence of properties\n      ((max(declarations, declarationPropertyPrecedence) & 15) << 4) |\n      // 4: greatest precedence of values\n      (max(declarations, declarationValuePrecedence) & 15))\n  )\n}\n", "import type { Declarations, PluginApply, PluginTokenResult } from './types'\n\nimport { joinTruthy, asTokens } from './util'\n\nexport const apply: PluginApply = (...tokens: unknown[]): PluginTokenResult => (parse) =>\n  parse(asTokens(tokens))\n\nconst positions = (resolve: (position: string) => undefined | string[] | void) => (\n  value: string | string[] | undefined,\n  position: string,\n  prefix?: string,\n  suffix?: string,\n): Declarations | undefined => {\n  if (value) {\n    const properties = position && resolve(position)\n\n    if (properties && properties.length > 0) {\n      // eslint-disable-next-line unicorn/no-reduce\n      return properties.reduce((declarations, property) => {\n        declarations[joinTruthy([prefix, property, suffix])] = value\n        return declarations\n      }, {} as Declarations)\n    }\n  }\n}\n\nconst CORNERS: Record<string, undefined | string[]> = {\n  t: ['top-left', 'top-right'],\n  r: ['top-right', 'bottom-right'],\n  b: ['bottom-left', 'bottom-right'],\n  l: ['bottom-left', 'top-left'],\n  tl: ['top-left'],\n  tr: ['top-right'],\n  bl: ['bottom-left'],\n  br: ['bottom-right'],\n}\n\nexport const corners = positions((key) => CORNERS[key])\n\nconst X_Y_TO_EDGES: Record<string, undefined | string> = { x: 'lr', y: 'tb' }\n\nconst EDGES: Record<string, undefined | string> = {\n  t: 'top',\n  r: 'right',\n  b: 'bottom',\n  l: 'left',\n}\n\nexport const expandEdges = (key: string): string[] | undefined => {\n  const parts = (X_Y_TO_EDGES[key] || key || '')\n    .split('')\n    .sort()\n    // eslint-disable-next-line unicorn/no-reduce, array-callback-return\n    .reduce((result, edge) => {\n      if (result && EDGES[edge]) {\n        result.push(EDGES[edge] as string)\n        return result\n      }\n    }, [] as string[] | undefined | void) as string[] | undefined\n\n  if (parts && parts.length > 0) return parts\n}\n\n// Support several edges like 'tr'\n// 'x' and 'y' can not be combined with others because size 'xl'\n// Every char must be a edge position\n// Sort to have consistent declaration ordering\nexport const edges = positions(expandEdges)\n", "import type { Declarations, Plugin, PluginContext, Theme, ThemeValueResolver } from './types'\n\nimport * as is from './is'\nimport { corners, edges, expandEdges } from './helpers'\nimport { join, joinTruthy, merge, tail, capitalize, hyphenate } from './util'\n\n// Shared variables\nlet _: undefined | string | Declarations | string[] | boolean\nlet __: undefined | string\nlet $: undefined | string\n\n/* eslint-disable no-return-assign, no-cond-assign, @typescript-eslint/consistent-type-assertions */\n\nconst parseColorComponent = (chars: string, factor: number): number =>\n  // eslint-disable-next-line unicorn/prefer-number-properties\n  Math.round(parseInt(chars, 16) * factor)\n\nconst asRGBA = <T extends string | undefined>(\n  color: T,\n  opacityProperty: string,\n  opacityDefault?: string,\n): T | string => {\n  if (color && color[0] === '#') {\n    const length = (color.length - 1) / 3\n    const factor = [17, 1, 0.062272][length - 1]\n\n    /* eslint-disable unicorn/prefer-string-slice */\n    return `rgba(${parseColorComponent(color.substr(1, length), factor)},${parseColorComponent(\n      color.substr(1 + length, length),\n      factor,\n    )},${parseColorComponent(\n      color.substr(1 + 2 * length, length),\n      factor,\n    )},var(--${opacityProperty}${opacityDefault ? ',' + opacityDefault : ''}))`\n    /* eslint-enable unicorn/prefer-string-slice */\n  }\n\n  return color\n}\n\nconst withOpacityFallback = (\n  property: string,\n  kind: string,\n  color: string | undefined,\n  tag: PluginContext['tag'],\n): Declarations | undefined =>\n  color\n    ? {\n        [`--${tag(kind + '-opacity')}`]: '1',\n        [property]: (_ = asRGBA(color, tag(kind + '-opacity'))) && _ !== color ? [color, _] : color,\n      }\n    : undefined\n\nconst reversableEdge = (\n  parts: string[],\n  theme: ThemeValueResolver,\n  section: 'divideWidth' | 'space',\n  tag: PluginContext['tag'],\n  prefix: string,\n  suffix?: string,\n): Declarations | undefined =>\n  (_ = ({ x: ['right', 'left'], y: ['bottom', 'top'] } as Record<string, undefined | string[]>)[\n    parts[1]\n  ]) && ($ = `--${tag(`${parts[0]}-${parts[1]}-reverse`)}`)\n    ? parts[2] === 'reverse'\n      ? {\n          [$]: '1',\n        }\n      : {\n          [$]: '0',\n          [joinTruthy([prefix, _[0], suffix])]:\n            (__ = theme(section, tail(parts, 2))) && `calc(${__} * var(${$}))`,\n          // IE 11 fallback\n          [joinTruthy([prefix, _[1], suffix])]: __ && [__, `calc(${__} * calc(1 - var(${$})))`],\n        }\n    : undefined\n\nconst propertyValue = (property: string, separator?: string) => (\n  parts: string[],\n): Declarations => ({ [property]: join(tail(parts), separator) })\n\n// .duration-75\ttransition-duration: 75ms;\n// .duration-75\ttransition-duration: 75ms;\nconst themeProperty = (section: keyof Theme) => (parts: string[], theme: ThemeValueResolver) => ({\n  [hyphenate(section)]: theme(section, tail(parts)) as string,\n})\n\nconst propertyAndValue = (parts: string[]): Declarations => propertyValue(parts[0])(parts)\n\nconst display = (parts: string[]): Declarations => ({ display: join(parts) })\nconst position = (parts: string[]): Declarations => ({ position: parts[0] })\nconst textTransform = (parts: string[]): Declarations => ({ 'text-transform': parts[0] })\nconst textDecoration = (parts: string[]): Declarations => ({ 'text-decoration': join(parts) })\nconst inset: Plugin = (parts, theme) => ({ [parts[0]]: theme('inset', tail(parts)) })\n\nconst opacityProperty = (\n  parts: string[],\n  theme: ThemeValueResolver,\n  tag: PluginContext['tag'],\n  sectionPrefix = parts[0],\n): Declarations => ({\n  [`--${tag(parts[0] + '-opacity')}`]: theme(\n    (sectionPrefix + 'Opacity') as 'textOpacity',\n    tail(parts, 2),\n  ),\n})\n\nconst border = (\n  parts: string[],\n  theme: ThemeValueResolver,\n  tag: PluginContext['tag'],\n): Declarations | undefined => {\n  switch (parts[1]) {\n    case 'solid':\n    case 'dashed':\n    case 'dotted':\n    case 'double':\n    case 'none':\n      return propertyValue('border-style')(parts)\n    case 'collapse':\n    case 'separate':\n      return propertyValue('border-collapse')(parts)\n    case 'opacity':\n      return opacityProperty(parts, theme, tag)\n  }\n\n  return (_ = theme(\n    `${parts[0]}Width` as 'borderWidth' | 'divideWidth',\n    tail(parts),\n    '' /* Optional */,\n  ))\n    ? { 'border-width': _ }\n    : withOpacityFallback(\n        'border-color',\n        parts[0],\n        theme(`${parts[0]}Color` as 'borderColor' | 'divideColor', tail(parts)),\n        tag,\n      )\n}\n\n// 'min-w-full' -> minWidth\n// 'max-h-0.5' -> maxHeight\nconst minMax: Plugin = (parts, theme) =>\n  (_ = ({ w: 'width', h: 'height' } as Record<string, undefined | string>)[parts[1]]) && {\n    [`${parts[0]}-${_}`]: theme(\n      `${parts[0]}${capitalize(_)}` as 'minWidth' | 'minHeight' | 'maxWidth' | 'maxHeight',\n      tail(parts, 2),\n    ),\n  }\n\nconst edgesPluginFor = (key: 'margin' | 'padding'): Plugin => (parts, theme) =>\n  parts[0][1]\n    ? edges(theme(key, tail(parts)), parts[0][1], key)\n    : { [key]: theme(key, tail(parts)) }\n\n// For p-*, px-*, pt-*\nconst padding = edgesPluginFor('padding')\n\n// For m-*, mx-*, mt-*\nconst margin = edgesPluginFor('margin')\n\nconst gridPlugin = (kind: string): Plugin => (parts) => {\n  switch (parts[1]) {\n    case 'auto':\n      return { [`grid-${kind}`]: 'auto' }\n    case 'span':\n      return (\n        parts[2] && {\n          [`grid-${kind}`]: parts[2] === 'full' ? '1 / -1' : `span ${parts[2]} / span ${parts[2]}`,\n        }\n      )\n    case 'start':\n    case 'end':\n      return (\n        parts.length === 3 && {\n          [`grid-${kind}-${parts[1]}`]: parts[2],\n        }\n      )\n  }\n}\n\nconst placeHelper = (property: string, parts: string[]): Declarations => ({\n  // 'auto'\n  // 'start'\n  // 'end'\n  // 'center'\n  // 'stretch'\n  // 'between'\n  // 'around'\n  // 'evenly'\n  // 'between', 'around', 'evenly' => space-$0\n  // 4th char is unique\n  // eslint-disable-next-line no-implicit-coercion\n  [property]: (~'wun'.indexOf(parts[1][3]) ? 'space-' : '') + parts[1],\n})\n\nconst contentPluginFor = (property: string) => (parts: string[]): Declarations => {\n  switch (parts[1]) {\n    case 'start':\n    case 'end':\n      return { [property]: `flex-${parts[1]}` }\n  }\n\n  return placeHelper(property, parts)\n}\n\nconst transform = (tag: PluginContext['tag'], gpu?: boolean): string =>\n  `${\n    gpu\n      ? `translate3d(var(--${tag('translate-x')},0),var(--${tag('translate-y')},0),0)`\n      : `translateX(var(--${tag('translate-x')},0)) translateY(var(--${tag('translate-y')},0))`\n  } rotate(var(--${tag('rotate')},0)) skewX(var(--${tag('skew-x')},0)) skewY(var(--${tag(\n    'skew-y',\n  )},0)) scaleX(var(--${tag('scale-x')},1)) scaleY(var(--${tag('scale-y')},1))`\n\n// .scale-0\t--scale-x: 0;\n// .scale-x-150\n// .scale-y-0\n// .translate-x-0\t--translate-x: 0;\n// .translate-x-1\t--translate-x: 0.25rem;\n// .translate-y-px\t--translate-y: 1px;\n// .translate-y-full\t--translate-y: 100%;\n// .translate-y-1/2\t--translate-y: 50%;\n// .skew-y-0\t--skew-y: 0;\n// .skew-y-1\t--skew-y: 1deg;\nconst transformFunction: Plugin = (parts, theme, { tag }) =>\n  (_ = theme(parts[0] as 'scale' | 'skew' | 'translate', parts[2] || parts[1])) && {\n    [`--${tag(parts[0] + '-x')}`]: parts[1] !== 'y' && _,\n    [`--${tag(parts[0] + '-y')}`]: parts[1] !== 'x' && _,\n    transform: [`${parts[0]}${parts[2] ? parts[1].toUpperCase() : ''}(${_})`, transform(tag)],\n  }\n\nconst boxShadow = (tag: PluginContext['tag']): string =>\n  `var(--${tag('ring-offset-shadow')},0 0 transparent),var(--${tag(\n    'ring-shadow',\n  )},0 0 transparent),var(--${tag('shadow')},0 0 transparent)`\n\n// .from-purple-400\n// .to-red-500\nconst gradientColorStop: Plugin = (parts, theme, { tag }) =>\n  (_ = theme('gradientColorStops', tail(parts))) && {\n    [`--${tag('gradient-' + parts[0])}`]: _,\n  }\n\nexport const utilities: Record<string, Plugin> = {\n  // .shadow\tbox-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  // .shadow-md\tbox-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  // .shadow-none\tbox-shadow: none;\n  shadow: (parts, theme, { tag }) =>\n    (_ = theme('boxShadow', tail(parts))) && {\n      [`--${tag('shadow')}`]: _,\n      // IE11 fallback first, then modern with ring-* support\n      'box-shadow': [_, boxShadow(tag)],\n    },\n\n  // From theme.ringWidth\n  // .ring\n  // .ring-0\n  // .ring-inset\n  //\n  // From theme.colors\n  // .ring-current\n  // .ring-transparent\n  // .ring-gray-100\n  //\n  // From theme.opacity\n  // .ring-opacity-50\n  //\n  // From theme.ringOffsetWidth\n  // .ring-offset -> 2px\n  // .ring-offset-8 -> 8px\n  ring(parts, theme, { tag }) {\n    switch (parts[1]) {\n      case 'inset':\n        return { [`--${tag('ring-inset')}`]: 'inset' }\n\n      case 'opacity':\n        return opacityProperty(parts, theme, tag)\n\n      case 'offset':\n        // Either width or color\n        return (_ = theme('ringOffsetWidth', tail(parts, 2), '' /* Optional */))\n          ? {\n              [`--${tag('ring-offset-width')}`]: _,\n            }\n          : {\n              [`--${tag('ring-offset-color')}`]: theme('ringOffsetColor', tail(parts, 2)),\n            }\n    }\n\n    // Either width or color\n    return (_ = theme('ringWidth', tail(parts), '' /* Optional */))\n      ? {\n          // A width\n          [`--${tag('ring-offset-shadow')}`]: `var(--${tag(\n            'ring-inset',\n          )},/*!*/ /*!*/) 0 0 0 var(--${tag('ring-offset-width')},${theme(\n            'ringOffsetWidth',\n            '',\n            '0px',\n          )}) var(--${tag('ring-offset-color')},${theme('ringOffsetColor', '', '#fff')})`,\n\n          [`--${tag('ring-shadow')}`]: `var(--${tag(\n            'ring-inset',\n          )},/*!*/ /*!*/) 0 0 0 calc(${_} + var(--${tag('ring-offset-width')},${theme(\n            'ringOffsetWidth',\n            '',\n            '0px',\n          )})) var(--${tag('ring-color')},${theme(\n            'ringColor',\n            '',\n            asRGBA(\n              theme('ringColor', '', '#93c5fd'),\n              tag('ring-opacity'),\n              theme('ringOpacity', '', '0.5'),\n            ),\n          )})`,\n\n          'box-shadow': boxShadow(tag),\n        }\n      : {\n          // A color\n          [`--${tag('ring-opacity')}`]: '1',\n          [`--${tag('ring-color')}`]: asRGBA(theme('ringColor', tail(parts)), tag('ring-opacity')),\n        }\n  },\n\n  // .duration-75\ttransition-duration: 75ms;\n  // .duration-75\ttransition-duration: 75ms;\n  duration: themeProperty('transitionDuration'),\n\n  // .delay-75\ttransition-delay: 75ms;\n  // .delay-100\ttransition-delay: 100ms;\n  delay: themeProperty('transitionDelay'),\n\n  tracking: themeProperty('letterSpacing'),\n\n  // .leading-10\tline-height: 2.5rem;\n  // .leading-none\tline-height: 1;\n  // .leading-tight\tline-height: 1.25;\n  leading: themeProperty('lineHeight'),\n\n  // .z-50\tz-index: 50;\n  // .z-auto\tz-index: auto;\n  z: themeProperty('zIndex'),\n\n  opacity: themeProperty('opacity'),\n\n  ease: themeProperty('transitionTimingFunction'),\n\n  // .w-64\twidth: 16rem;\n  // .w-auto\twidth: auto;\n  // .w-px\twidth: 1px;\n  // .w-1/2\twidth: 50%;\n  // .w-full\twidth: 100%;\n  // .w-screen\twidth: 100vw;\n  w: themeProperty('width'),\n\n  h: themeProperty('height'),\n\n  fill: themeProperty('fill'),\n\n  order: themeProperty('order'),\n\n  origin: propertyValue('transform-origin', ' '),\n\n  select: propertyValue('user-select'),\n\n  'pointer-events': propertyValue('pointer-events'),\n\n  align: propertyValue('vertical-align'),\n\n  whitespace: propertyValue('white-space'),\n\n  transform: (parts, theme, { tag }) =>\n    parts[1] === 'none'\n      ? { transform: 'none' }\n      : {\n          [`--${tag('translate-x')}`]: '0',\n          [`--${tag('translate-y')}`]: '0',\n          [`--${tag('rotate')}`]: '0',\n          [`--${tag('skew-x')}`]: '0',\n          [`--${tag('skew-y')}`]: '0',\n          [`--${tag('scale-x')}`]: '1',\n          [`--${tag('scale-y')}`]: '1',\n          transform: transform(tag, parts[1] === 'gpu'),\n        },\n\n  // .rotate-0\t--transform-rotate: 0;\n  // .rotate-1\t--transform-rotate: 1deg;\n  rotate: (parts, theme, { tag }) =>\n    (_ = theme('rotate', tail(parts))) && {\n      [`--${tag('rotate')}`]: _,\n      transform: [`rotate(${_})`, transform(tag)],\n    },\n\n  scale: transformFunction,\n  translate: transformFunction,\n  skew: transformFunction,\n\n  // .gap-0\tgap: 0;\n  // .gap-1\tgap: 0.25rem;\n  // .gap-px\tgap: 1px;\n  // .gap-x-0\tcolumn-gap: 0;\n  // .gap-x-1\tcolumn-gap: 0.25rem;\n  gap: (parts, theme) =>\n    (_ = ({ x: 'column', y: 'row' } as Record<string, string | undefined>)[parts[1]])\n      ? { [_ + '-gap']: theme('gap', tail(parts, 2)) }\n      : themeProperty('gap')(parts, theme),\n\n  // .stroke-current\tstroke: currentColor;\n  // stroke-0\tstroke-width: 0;\n  // .stroke-1\tstroke-width: 1;\n  stroke: (parts, theme) =>\n    (_ = theme('stroke', tail(parts), '' /* Optional */))\n      ? { stroke: _ }\n      : themeProperty('strokeWidth')(parts, theme),\n\n  // .outline-none\toutline: 2px solid transparent; outline-offset: 2px;\n  // .outline-white\toutline: 2px dotted white; outline-offset: 2px;\n  outline: (parts, theme) =>\n    (_ = theme('outline', tail(parts))) && {\n      outline: _[0],\n      'outline-offset': _[1],\n    },\n\n  break(parts) {\n    switch (parts[1]) {\n      case 'normal':\n        return {\n          'word-break': 'normal',\n          'overflow-wrap': 'normal',\n        }\n      case 'words':\n        return { 'overflow-wrap': 'break-word' }\n      case 'all':\n        return { 'word-break': 'break-all' }\n    }\n  },\n\n  underline: textDecoration,\n  'no-underline': textDecoration(['none']),\n  'line-through': textDecoration,\n\n  'text-underline': textDecoration(['underline']),\n  'text-no-underline': textDecoration(['none']),\n  'text-line-through': textDecoration(['line', 'through']),\n\n  uppercase: textTransform,\n  lowercase: textTransform,\n  capitalize: textTransform,\n\n  'normal-case': textTransform(['none']),\n  'text-normal-case': textTransform(['none']),\n\n  text(parts, theme, { tag }) {\n    switch (parts[1]) {\n      case 'left':\n      case 'center':\n      case 'right':\n      case 'justify':\n        return propertyValue('text-align')(parts)\n      case 'uppercase':\n      case 'lowercase':\n      case 'capitalize':\n        return textTransform(tail(parts))\n      case 'opacity':\n        return opacityProperty(parts, theme, tag)\n    }\n\n    const fontSize = theme('fontSize', tail(parts), '' /* Optional */)\n\n    if (fontSize) {\n      return is.string(fontSize)\n        ? { 'font-size': fontSize }\n        : {\n            'font-size': fontSize[0],\n            'line-height': is.string(fontSize[1]) ? fontSize[1] : fontSize[1].lineHeight,\n            'letter-spacing': (fontSize[1] as { letterSpacing?: string }).letterSpacing,\n          }\n    }\n\n    return withOpacityFallback('color', 'text', theme('textColor', tail(parts)), tag)\n  },\n\n  // eslint-disable-next-line complexity\n  bg(parts, theme, { tag }) {\n    switch (parts[1]) {\n      case 'fixed':\n      case 'local':\n      case 'scroll':\n        return propertyValue('background-attachment', ',')(parts)\n\n      case 'bottom':\n      case 'center':\n      case 'left':\n      case 'right':\n      case 'top':\n        return propertyValue('background-position', ' ')(parts)\n\n      case 'no':\n        return parts[2] === 'repeat' && propertyValue('background-repeat')(parts)\n\n      case 'auto':\n      case 'cover':\n      case 'contain':\n        return propertyValue('background-size')(parts)\n\n      case 'repeat':\n        switch (parts[2]) {\n          case 'x':\n          case 'y':\n            return propertyValue('background-repeat')(parts)\n        }\n\n        return { 'background-repeat': parts[2] || parts[1] }\n\n      case 'opacity':\n        return opacityProperty(parts, theme, tag, 'background')\n\n      case 'clip':\n        return { 'background-clip': parts[2] + (parts[2] === 'text' ? '' : '-box') }\n\n      // .bg-gradient-to-r => linear-gradient(to right, ...)\n      // .bg-gradient-to-r => linear-gradient(to right, ...)\n      case 'gradient':\n        if (parts[2] === 'to' && (_ = expandEdges(parts[3]))) {\n          return {\n            'background-image': `linear-gradient(to ${join(_, ' ')},var(--${tag(\n              'gradient-stops',\n            )},var(--${tag('gradient-from')},transparent),var(--${tag(\n              'gradient-to',\n            )},transparent)))`,\n          }\n        }\n    }\n\n    return (_ = theme('backgroundImage', tail(parts), '' /* Optional */))\n      ? { 'background-image': _ }\n      : merge(\n          withOpacityFallback('background-color', 'bg', theme('backgroundColor', tail(parts)), tag),\n          // Look for a corresponding text color:\n          // 'primary' -> 'on-primary'\n          // 'on-primary' -> 'primary'\n          withOpacityFallback(\n            'color',\n            'text',\n            theme(\n              'textColor',\n              parts[1] === 'on' ? tail(parts, 2) : ['on'].concat(tail(parts)),\n              '' /* Optional */,\n            ),\n            tag,\n          ),\n        )\n  },\n\n  // .from-purple-400\n  from: gradientColorStop,\n\n  // .to-red-500\n  to: gradientColorStop,\n\n  // .via-pink-500\n  via: (parts, theme, { tag }) =>\n    (_ = theme('gradientColorStops', tail(parts))) && {\n      [`--${tag('gradient-stops')}`]: `var(--${tag('gradient-from')},transparent),${_},var(--${tag(\n        'gradient-to',\n      )},transparent)`,\n    },\n\n  // .rounded\tborder-radius: 0.25rem;\n  // .rounded-5\tborder-radius: 5px;\n  // .rounded-md\tborder-radius: 0.375rem;\n  // .rounded-lg\tborder-radius: 0.5rem;\n  // .rounded-xl\tborder-radius: 0.75rem;\n  // .rounded-2xl\tborder-radius: 1rem;\n  // .rounded-3xl\tborder-radius: 1.5rem;\n  // .rounded-full\tborder-radius: 9999px;\n  // .rounded-t-none\tborder-top-left-radius: 0px; border-top-right-radius: 0px;\n  // .rounded-t-4\tborder-radius: 4px;\n  rounded: (parts, theme) =>\n    corners(\n      theme('borderRadius', tail(parts, 2), '' /* Optional */),\n      parts[1],\n      'border',\n      'radius',\n    ) || themeProperty('borderRadius')(parts, theme),\n\n  'transition-none': { 'transition-property': 'none' },\n\n  transition: (parts, theme) => ({\n    transition: joinTruthy(\n      [\n        theme('transitionProperty', tail(parts)),\n        theme('transitionDuration', ''),\n        theme('transitionTimingFunction', ''),\n      ],\n      ' ',\n    ),\n  }),\n\n  flex(parts, theme) {\n    switch (parts[1]) {\n      case 'row':\n      case 'col':\n        return {\n          'flex-direction': join(\n            parts[1] === 'col' ? ['column'].concat(tail(parts, 2)) : tail(parts, 1),\n          ),\n        }\n      case 'nowrap':\n      case 'wrap':\n        return propertyValue('flex-wrap')(parts)\n      case 'grow':\n      case 'shrink':\n        return { [`flex-${parts[1]}`]: parts[2] || '1' }\n    }\n\n    return (_ = theme('flex', tail(parts), '' /* Optional */)) ? { flex: _ } : display(parts)\n  },\n\n  grid(parts) {\n    switch (parts[1]) {\n      case 'cols':\n      case 'rows':\n        return (\n          parts.length > 2 && {\n            [`grid-template-${parts[1] === 'cols' ? 'columns' : parts[1]}`]:\n              parts.length === 3 && Number(parts[2])\n                ? `repeat(${parts[2]},minmax(0,1fr))`\n                : join(tail(parts, 2), ' '),\n          }\n        )\n\n      case 'flow':\n        return (\n          parts.length > 2 && {\n            'grid-auto-flow': join(\n              parts[2] === 'col' ? ['column'].concat(tail(parts, 3)) : tail(parts, 2),\n              ' ',\n            ),\n          }\n        )\n    }\n\n    return display(parts)\n  },\n\n  auto(parts) {\n    switch (parts[1]) {\n      case 'cols':\n      case 'rows':\n        return (\n          (_ =\n            parts.length === 3\n              ? ({\n                  auto: 'auto',\n                  min: 'min-content',\n                  max: 'max-content',\n                  fr: 'minmax(0,1fr)',\n                } as Record<string, undefined | string>)[parts[2]] || `minmax(0,${parts[2]})`\n              : parts.length > 3 && `minmax(${join(tail(parts, 2), ',')})`) && {\n            [`grid-auto-${parts[1] === 'cols' ? 'columns' : 'rows'}`]: _,\n          }\n        )\n    }\n  },\n\n  'not-sr-only': {\n    position: 'static',\n    width: 'auto',\n    height: 'auto',\n    padding: '0',\n    margin: '0',\n    overflow: 'visible',\n    clip: 'auto',\n    'white-space': 'normal',\n  },\n\n  hidden: display(['none']),\n\n  inline: display,\n  block: display,\n  contents: display,\n\n  table(parts) {\n    switch (parts[1]) {\n      case 'auto':\n      case 'fixed':\n        return propertyValue('table-layout')(parts)\n    }\n\n    return display(parts)\n  },\n\n  flow: display,\n\n  d: (parts) => display(tail(parts)),\n\n  static: position,\n  fixed: position,\n  absolute: position,\n  relative: position,\n  sticky: position,\n\n  visible: { visibility: 'visible' },\n  invisible: { visibility: 'hidden' },\n\n  antialiased: {\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale',\n  },\n\n  'subpixel-antialiased': {\n    '-webkit-font-smoothing': 'auto',\n    '-moz-osx-font-smoothing': 'auto',\n  },\n\n  truncate: {\n    overflow: 'hidden',\n    'text-overflow': 'ellipsis',\n    'white-space': 'nowrap',\n  },\n\n  resize: (parts) =>\n    parts.length <= 2 && {\n      resize:\n        ({ x: 'vertical', y: 'horizontal' } as Record<string, string | undefined>)[parts[1]] ||\n        parts[1] ||\n        'both',\n    },\n\n  // TODO remove once IE11 support is dropped: https://www.digitalocean.com/community/tutorials/css-no-more-clearfix-flow-root\n  clearfix: [\n    '::after',\n    {\n      content: '\"\"',\n      display: 'table',\n      clear: 'both',\n    },\n  ],\n\n  object(parts) {\n    switch (parts[1]) {\n      case 'contain':\n      case 'cover':\n      case 'fill':\n      case 'none':\n      case 'scale':\n        return propertyValue('object-fit')(parts)\n    }\n\n    return propertyValue('object-position', ' ')(parts)\n  },\n\n  // TODO: move into helper\n  top: inset,\n  right: inset,\n  bottom: inset,\n  left: inset,\n\n  // 'inset-0'\n  // 'inset-1.5'\n  // 'inset-x-1.5'\n  inset: (parts, theme) =>\n    (_ = expandEdges(parts[1]))\n      ? edges(theme('inset', tail(parts, 2)), parts[1])\n      : (_ = theme('inset', tail(parts))) && {\n          top: _,\n          right: _,\n          bottom: _,\n          left: _,\n        },\n\n  items(parts) {\n    switch (parts[1]) {\n      case 'start':\n      case 'end':\n        return { 'align-items': `flex-${parts[1]}` }\n    }\n\n    return propertyValue('align-items')(parts)\n  },\n\n  content: contentPluginFor('align-content'),\n  justify: contentPluginFor('justify-content'),\n  self: contentPluginFor('align-self'),\n\n  place: (parts) => placeHelper('place-' + parts[1], tail(parts)),\n\n  col: gridPlugin('column'),\n  row: gridPlugin('row'),\n\n  list(parts) {\n    switch (parts[1]) {\n      case 'inside':\n      case 'outside':\n        return propertyValue('list-style-position')(parts)\n    }\n\n    return propertyValue('list-style-type')(parts)\n  },\n\n  'sr-only': {\n    position: 'absolute',\n    width: '1px',\n    height: '1px',\n    padding: '0',\n    margin: '-1px',\n    overflow: 'hidden',\n    clip: 'rect(0,0,0,0)',\n    'white-space': 'nowrap',\n    'border-width': '0',\n  },\n\n  box: (parts) => ({ 'box-sizing': `${parts[1]}-box` }),\n\n  // .appearance-none -> appearance: none;\n  // .appearance-auto -> appearance: auto;\n  // .appearance-menulist-button; -> appearance: menulist-button;\n  // .appearance-textfield -> appearance: textfield;\n  appearance: propertyAndValue,\n  cursor: propertyAndValue,\n\n  float: propertyAndValue,\n  clear: propertyAndValue,\n\n  // 'overflow-visible'\n  // 'overflow-x-hidden'\n  overflow(parts) {\n    switch (parts[1]) {\n      case 'ellipsis':\n      case 'clip':\n        return propertyValue('text-overflow')(parts)\n    }\n\n    return parts[2] ? { [`overflow-${parts[1]}`]: parts[2] } : propertyAndValue(parts)\n  },\n\n  p: padding,\n  py: padding,\n  px: padding,\n  pt: padding,\n  pr: padding,\n  pb: padding,\n  pl: padding,\n\n  m: margin,\n  my: margin,\n  mx: margin,\n  mt: margin,\n  mr: margin,\n  mb: margin,\n  ml: margin,\n\n  italic: { 'font-style': 'italic' },\n  'not-italic': { 'font-style': 'normal' },\n\n  'font-italic': { 'font-style': 'italic' },\n  'font-not-italic': { 'font-style': 'normal' },\n\n  font: (parts, theme) =>\n    (_ = theme('fontFamily', tail(parts), '' /* Optional */))\n      ? { 'font-family': _ }\n      : themeProperty('fontWeight')(parts, theme),\n\n  space: (parts, theme, { tag }) =>\n    (_ = reversableEdge(parts, theme, 'space', tag, 'margin')) && [\n      '>:not([hidden])~:not([hidden])',\n      _,\n    ],\n\n  // .border\tborder-width: 1px;\n  // .border-0\tborder-width: 0;\n  // .border-2\tborder-width: 2px;\n  // .border\tborder-width: 1px;\n  // .border-t\tborder-top-width: 1px;\n  // .border-t-0\tborder-top-width: 0px;\n  // .border-t-xs\n  border: (parts, theme, { tag }) =>\n    expandEdges(parts[1])\n      ? edges(theme('borderWidth', tail(parts, 2)), parts[1], 'border', 'width')\n      : border(parts, theme, tag),\n\n  // .divide-x\n  // .divide-x-8\n  divide: (parts, theme, { tag }) =>\n    (_ =\n      reversableEdge(parts, theme, 'divideWidth', tag, 'border', 'width') ||\n      border(parts, theme, tag)) && ['>:not([hidden])~:not([hidden])', _],\n\n  placeholder: (parts, theme, { tag }) =>\n    (_ =\n      parts[1] === 'opacity'\n        ? opacityProperty(parts, theme, tag)\n        : withOpacityFallback(\n            'color',\n            'placeholder',\n            theme('placeholderColor', tail(parts)),\n            tag,\n          )) && ['::placeholder', _],\n\n  min: minMax,\n  max: minMax,\n\n  animate: (parts, theme, { keyframes }) => {\n    const animation = theme('animation', (_ = tail(parts)))\n\n    return (\n      animation && {\n        animation: is.string(animation)\n          ? animation\n          : `${keyframes(animation[1] || join(_))} ${animation[0]}`,\n      }\n    )\n  },\n\n  overscroll: (parts) => ({\n    ['overscroll-behavior' + (parts[2] ? '-' + parts[1] : '')]: parts[2] || parts[1],\n  }),\n}\n\n/* eslint-enable no-return-assign, no-cond-assign, @typescript-eslint/consistent-type-assertions */\n", "import type { Mode } from './types'\n\nimport { join } from './util'\n\nexport const mode = (report: (message: string) => void): Mode => ({\n  unknown(section, parts, optional) {\n    if (!optional) {\n      // TODO hint about possible values, did you mean ...\n      // TODO stacktrace from callee [message, new Error().stack.split('at ').pop()].join(' ');\n      report(`No theme value found for ${section}[${JSON.stringify(join(parts) || 'DEFAULT')}]`)\n    }\n  },\n\n  warn(message, directive) {\n    report((directive ? `[${directive}] ` : '') + message)\n  },\n})\n\nexport const warn = mode((message) => console.warn(message))\n\nexport const strict = mode((message) => {\n  throw new Error(message)\n})\n", "import type {\n  Plugin,\n  Declarations,\n  ConfigurationOptions,\n  Injector,\n  Hasher,\n  OnInit,\n  ThemeValueResolver,\n  SelectorDecorator,\n  ThemeResolver,\n  Theme,\n  ThemeSectionValueType,\n  Falsy,\n} from './types'\n\nimport * as is from './is'\n\nimport { createRule, toClassName } from './css'\nimport { isBrowser } from './env'\nimport { cssomInjector, noOpInjector } from './injectors'\nimport { theme } from './theme'\nimport { autoprefix } from './prefix'\nimport { cyrb32 } from './hash'\nimport { createVariant } from './variants'\nimport { createCache, join, sortedInsertionIndex, merge, identity } from './util'\nimport { calculatePrecedence } from './precedence'\nimport { utilities as builtinUtilities } from './plugins'\nimport { warn } from './modes'\n\nexport interface Context {\n  /**\n   * Theme section accessor\n   */\n  t: ThemeValueResolver\n\n  /**\n   * Plugin accessor\n   */\n  p: (id: string) => Plugin | undefined\n\n  /** Creates marker class name. This is used by group-hover and group-focus */\n  a: (directive: string) => string\n\n  /**\n   * Get cached className\n   */\n  g: (directive: string, variants: readonly string[]) => string | undefined\n\n  /**\n   * Set cached className\n   */\n  s: (directive: string, variants: readonly string[], className: string) => void\n\n  r: ThemeResolver\n\n  /**\n   * Injects css\n   */\n  i: (\n    directive: string,\n    variants: readonly string[],\n    declarations: Declarations,\n    selectorDecorator?: SelectorDecorator,\n  ) => string\n\n  k: (name: string, waypoints: Record<string, Declarations>) => string\n\n  /**\n   * Configure\n   */\n  c: (options?: ConfigurationOptions | ConfigurationOptions[]) => void\n\n  /**\n   * Warn\n   */\n  w: (directive: string, message: string) => void\n}\n\nconst withoutDarkVariant = (variant: string): boolean => variant !== ':dark'\n\nexport const createContext = (config?: ConfigurationOptions | ConfigurationOptions[]): Context => {\n  let darkMode: ConfigurationOptions['darkMode'] = 'media'\n  let darkModeClass = 'dark'\n\n  let activeTheme = theme\n  let activePlugins = builtinUtilities\n\n  // Lazy set injector to prevent side-effects if a custom injector is provided in setup()\n  let injector: Injector\n  let nonce: string | undefined\n  const inits: OnInit[] = []\n\n  let prefix = autoprefix\n  let hash: Hasher | false = cyrb32\n\n  let mode = warn\n\n  const idToClassName = createCache<string>()\n  const cachedClassNames = createCache<boolean>()\n  const sortedPrecedences: number[] = []\n\n  const withDarkModeClass = (selectorDecorator: SelectorDecorator): SelectorDecorator => (\n    selector,\n  ) => `.${darkModeClass} ${selectorDecorator(selector)}`\n\n  const setup = (nextConfig?: ConfigurationOptions | ConfigurationOptions[]): void =>\n    (is.array(nextConfig) ? nextConfig : [nextConfig]).forEach(\n      ({\n        darkMode: nextDarkMode = darkMode,\n        darkModeClass: nextDarkModeClass = darkModeClass,\n        theme: nextTheme,\n        plugins: newPlugins,\n        init,\n        injector: nextInjector,\n        nonce: nextNonce = nonce,\n        prefix: nextPrefix = prefix,\n        hash: nextHash = hash,\n        mode: nextMode = mode,\n      } = {}) => {\n        if (nextInjector && sortedPrecedences.length > 0) {\n          throw new Error('Changing the injector after first use is not supported')\n        }\n\n        darkMode = nextDarkMode\n        darkModeClass = nextDarkModeClass\n\n        nextTheme && (activeTheme = activeTheme.extend(nextTheme))\n        activePlugins = merge(activePlugins, newPlugins)\n\n        init && inits.push(init)\n        injector = nextInjector || injector\n        nonce = nextNonce\n\n        prefix = nextPrefix\n        hash = nextHash\n        mode = nextMode\n      },\n    )\n\n  const serializeDeclaration = (property: string, value: string | string[]): string =>\n    is.array(value)\n      ? join(\n          value.filter(Boolean).map((value) => prefix(property, value)),\n          ';',\n        )\n      : prefix(property, value)\n\n  const serializeDeclarationList = (declarations: Declarations): string =>\n    // eslint-disable-next-line unicorn/no-reduce\n    Object.keys(declarations).reduce(\n      (body, property) =>\n        declarations[property]\n          ? (body && body + ';') +\n            serializeDeclaration(property, declarations[property] as string | string[])\n          : body,\n      '',\n    )\n\n  const variantToCss = (variant: string): string => createVariant(variant, activeTheme)\n\n  const tag: Context['a'] = (directive) => (hash ? hash(directive) : directive)\n\n  const insert = (rule: string, presedence: number): void => {\n    if (!injector) {\n      injector = isBrowser ? cssomInjector({ nonce }) : noOpInjector()\n    }\n\n    const index = sortedInsertionIndex(sortedPrecedences, presedence)\n\n    try {\n      injector.insert(rule, index)\n      sortedPrecedences.splice(index, 0, presedence)\n    } catch (error) {\n      // Filter out vendor specific pseudo classes to prevent unnecessary warnings\n      // ::-moz-focus-inner\n      // :-moz-focusring\n      if (!/:-[mwo]/.test(rule)) {\n        mode.warn((error as Error).message)\n      }\n    }\n  }\n\n  const inject = (\n    id: string,\n    className: string,\n    rule: string,\n    variantsCss: readonly string[],\n    declarations: Declarations,\n    darkMode: boolean,\n  ): void => {\n    if (!cachedClassNames.has(className)) {\n      // eslint-disable-next-line unicorn/explicit-length-check\n      if (inits.length) {\n        inits.forEach((init) => init((rule) => insert(rule, 0), activeTheme))\n        inits.length = 0\n      }\n\n      insert(rule, calculatePrecedence(darkMode, variantsCss, declarations))\n\n      cachedClassNames.set(className, true)\n    }\n\n    idToClassName.set(id, className)\n  }\n\n  setup(config)\n\n  return {\n    t: <Section extends keyof Theme>(\n      section: Section,\n      keypath: string | string[],\n      defaultValue?: Falsy | NonNullable<ThemeSectionValueType<Theme[Section]>>,\n    ) => {\n      const parts = is.array(keypath) ? keypath : [keypath]\n\n      const value = activeTheme(section, join(parts) || 'DEFAULT')\n\n      return value == null\n        ? defaultValue || (mode.unknown(section, parts, defaultValue != null, activeTheme) as undefined)\n        : value\n    },\n\n    p: (id) => activePlugins[id],\n\n    a: tag,\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    r: ((section: keyof Theme, key: string, defaultValue: any): unknown =>\n      activeTheme(section, key, defaultValue)) as ThemeResolver,\n\n    g: (directive, variants) => idToClassName.get(toClassName(directive, variants)),\n\n    s: (directive, variants, className) =>\n      idToClassName.set(toClassName(directive, variants), className),\n\n    i(directive, variants, declarations, selectorDecorator = identity) {\n      const id = toClassName(directive, variants)\n\n      let className = idToClassName.get(id)\n\n      if (!className) {\n        // eslint-disable-next-line unicorn/prefer-includes\n        const useDarkMode = variants.indexOf(':dark') >= 0\n\n        if (useDarkMode && darkMode === 'class') {\n          selectorDecorator = withDarkModeClass(selectorDecorator)\n          variants = variants.filter(withoutDarkVariant)\n        }\n\n        const variantsCss = variants.map(variantToCss)\n        const declarationBody = serializeDeclarationList(declarations)\n\n        className = hash\n          ? hash(join([join(variantsCss, '\\0'), selectorDecorator(''), declarationBody], '\\0'))\n          : id\n\n        inject(\n          id,\n          className,\n          createRule(className, variantsCss, declarationBody, selectorDecorator, tag),\n          variantsCss,\n          declarations,\n          useDarkMode,\n        )\n      }\n\n      return className\n    },\n\n    k(name, waypoints) {\n      const id = '\\0' + name\n\n      let className = idToClassName.get(id)\n\n      if (!className) {\n        // eslint-disable-next-line unicorn/no-reduce\n        const declarationBody = Object.keys(waypoints).reduce(\n          (body, waypoint) =>\n            `${body}${waypoint}{${serializeDeclarationList(waypoints[waypoint])}}`,\n          '',\n        )\n\n        className = hash ? hash(declarationBody) : name\n\n        const rule = `@keyframes ${className}{${declarationBody}}`\n\n        inject(id, className, rule, [rule], {}, false)\n      }\n\n      return className\n    },\n\n    c: setup,\n\n    w(directive, message) {\n      mode.warn(message, directive)\n    },\n  }\n}\n", "import type {\n  Token,\n  Theme,\n  ThemeValueResolver,\n  ThemeSectionValueType,\n  Plugin,\n  PluginTokenResult,\n  InjectKeyframes,\n  PluginResult,\n  SelectorDecorator,\n  Falsy,\n} from './types'\nimport type { Context } from './context'\n\nimport * as is from './is'\nimport { tail, join } from './util'\n\n// Shared variables used during processing\nlet negate: string\nlet currentContext: Context\n\n// List of active groupings: either variant ('xxx:') or prefix\nconst groupings: string[] = []\nconst classNames: string[] = []\n\nconst theme: ThemeValueResolver = <Section extends keyof Theme>(\n  section: Section,\n  key: string | string[],\n  defaultValue?: Falsy | NonNullable<ThemeSectionValueType<Theme[Section]>>,\n) => {\n  const value = currentContext.t(section, key, defaultValue as Falsy)\n\n  return negate && value && is.string(value)\n    ? (`calc(${value} * -1)` as ThemeSectionValueType<Theme[Section]>)\n    : value\n}\n\nconst keyframes: InjectKeyframes = (name, waypoints) =>\n  currentContext.k(name, waypoints || currentContext.t('keyframes', name) || {})\n\nconst processTokenResult = (\n  token: string,\n  variants: readonly string[],\n  result: string | PluginTokenResult,\n): void => {\n  const lastClassNameLength = classNames.length\n\n  /* eslint-disable @typescript-eslint/no-use-before-define */\n  startGrouping()\n\n  if (is.string(result)) {\n    parseString(result)\n  } else {\n    result(parse)\n  }\n\n  endGrouping()\n  /* eslint-enable @typescript-eslint/no-use-before-define */\n\n  // Cache created class names\n  currentContext.s(token, variants, join(tail(classNames, lastClassNameLength), ' '))\n}\n\nconst handlePluginResult = (\n  token: string,\n  variants: readonly string[],\n  result: PluginResult | PluginTokenResult,\n): boolean | number | void => {\n  if (is.function(result) || is.string(result)) {\n    return !(processTokenResult(token, variants, result) as unknown)\n  }\n\n  let suffix: string | SelectorDecorator | undefined\n\n  if (is.array(result)) {\n    suffix = result[0]\n    result = result[1]\n  }\n\n  if (is.object(result)) {\n    return classNames.push(\n      currentContext.i(\n        token,\n        variants,\n        result,\n        is.string(suffix) ? (selector) => selector + (suffix as string) : suffix,\n      ),\n    )\n  }\n}\n\n// eslint-disable-next-line no-return-assign\nconst handleNegation = (value: string): string =>\n  value[0] === '-' ? ((negate = '-'), tail(value)) : ((negate = ''), value)\n\nconst translate = (token: string, variants: readonly string[]): unknown => {\n  const className =\n    // Return the marker class name\n    (token === 'group' && currentContext.a(token)) || currentContext.g(token, variants)\n\n  if (className != null) {\n    return className && classNames.push(className)\n  }\n\n  let directive = token\n\n  directive = handleNegation(directive)\n\n  let parts = directive.split('-')\n\n  // Try to find a plugin to handle this token\n  // example 'bg-gradient-to-r'\n  // 1. 'bg-gradient-to-r' -> parts=['bg-gradient-to-r']\n  // 2. 'bg-gradient-to'   -> parts=['bg-gradient-to', 'r']\n  // 4. 'bg-gradient'      -> parts=['bg-gradient', 'to', 'r']\n  // 5. 'bg'               -> parts=['bg', 'gradient', 'to', 'r']\n  let plugin: Plugin\n\n  for (let index = parts.length; index; index--) {\n    const id = join(parts.slice(0, index))\n\n    plugin = currentContext.p(id)\n\n    if (plugin) {\n      parts = tail(parts, index)\n      parts.unshift(id)\n      break\n    }\n  }\n\n  if (\n    !handlePluginResult(\n      token,\n      variants,\n      is.function(plugin) ? plugin(parts, theme, { keyframes, tag: currentContext.a }) : plugin,\n    )\n  ) {\n    currentContext.w(\n      token,\n      plugin ? `Plugin \"${parts[0]}\" had no result` : `No plugin for \"${directive}\" found`,\n    )\n  }\n}\n\nconst reset = (array: unknown[]): void => {\n  array.length = 0\n}\n\nconst startGrouping = (value = ''): '' => {\n  groupings.push(value)\n  return ''\n}\n\nconst endGrouping = (isWhitespace?: boolean): void => {\n  // If isWhitespace is true\n  // ['', ':sm', ':hover'] => ['']\n  // ['', ':sm', ':hover', ''] => ['', ':sm', ':hover', '']\n\n  // If isWhitespace is falsey\n  // ['', ':sm', ':hover'] => ['']\n  // ['', ':sm', ':hover', ''] => ['', ':sm', ':hover', '']\n\n  const index = groupings.lastIndexOf('')\n\n  if (~index) {\n    /* eslint-disable unicorn/prefer-math-trunc */\n    groupings.splice(\n      index + ~~(isWhitespace as boolean),\n      groupings.length - index + ~~(isWhitespace as boolean),\n    )\n    /* eslint-enable unicorn/prefer-math-trunc */\n  }\n}\n\nconst onlyPrefixes = (s: string): '' | boolean => s && s[0] !== ':'\nconst onlyVariants = (s: string): '' | boolean => s[0] === ':'\n\nconst translateBuffer = (buffer: string): '' => {\n  if (buffer) {\n    buffer = handleNegation(buffer)\n\n    const p = join(groupings.filter(onlyPrefixes))\n\n    translate(buffer === '&' ? p : negate + (p && p + '-') + buffer, groupings.filter(onlyVariants))\n  }\n\n  return ''\n}\n\nconst parseString = (token: string, isVariant?: boolean): void => {\n  let char: string\n  let buffer = ''\n\n  for (let position = 0; position < token.length; ) {\n    switch ((char = token[position++])) {\n      case ':':\n        if (buffer) {\n          buffer = startGrouping(':' + buffer)\n        }\n\n        break\n\n      case '(':\n        // If there is a buffer this is the prefix for all grouped tokens\n        if (buffer) {\n          buffer = startGrouping(buffer)\n        }\n\n        startGrouping()\n\n        break\n\n      case ')':\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case '\\r':\n        buffer = translateBuffer(buffer)\n        endGrouping(char !== ')')\n\n        break\n\n      default:\n        buffer += char\n    }\n  }\n\n  if (isVariant) {\n    if (buffer) {\n      startGrouping(':' + buffer)\n    }\n  } else {\n    translateBuffer(buffer)\n  }\n}\n\nconst parseGroupedToken = (token: Token): void => {\n  if (token) {\n    startGrouping()\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    parse(token)\n\n    endGrouping()\n  }\n}\n\nconst parseGroup = (key: string, token: Token): void => {\n  if (token) {\n    startGrouping()\n\n    const isVariant = is.string(token) || is.array(token) || is.object(token) || is.function(token)\n\n    parseString(key, isVariant)\n\n    if (isVariant) {\n      parseGroupedToken(token)\n    }\n\n    endGrouping()\n  }\n}\n\nlet nextTokenId = 0\n\nconst parse = (token: Token): void => {\n  if (is.string(token)) {\n    parseString(token)\n  } else if (is.array(token)) {\n    token.forEach(parseGroupedToken)\n  } else if (is.function(token)) {\n    handlePluginResult(\n      `__${token.name}_${(++nextTokenId).toString(36)}`,\n      groupings.filter(onlyVariants),\n      token(theme, { keyframes, tag: currentContext.a }),\n    )\n  } else if (is.object(token)) {\n    Object.keys(token).forEach((key) => {\n      parseGroup(key, token[key])\n    })\n  }\n}\n\nexport const process = (token: Token[], context: Context): string => {\n  if (currentContext) {\n    throw new Error('There is already an active context')\n  }\n\n  currentContext = context\n\n  reset(classNames)\n  reset(groupings)\n\n  try {\n    token.forEach(parseGroupedToken)\n  } finally {\n    ;((currentContext as unknown) as undefined) = undefined\n  }\n\n  return join(classNames, ' ')\n}\n", "import type { Instance, ConfigurationOptions } from './types'\n\nimport { createContext } from './context'\nimport { asTokens } from './util'\nimport { process } from './process'\n\nexport const createInstance = (\n  options?: ConfigurationOptions | ConfigurationOptions[],\n): Instance => {\n  const context = createContext(options)\n\n  return {\n    bw: (...tokens: unknown[]) => process(asTokens(tokens), context),\n\n    setup: context.c,\n\n    theme: context.r,\n  }\n}\n", "import { createInstance } from './instance'\n\nconst instance = createInstance()\n\nexport const { bw } = instance\nexport const { setup } = instance\nexport const { theme } = instance\n\nexport * from './hash'\nexport * from './injectors'\nexport * from './instance'\nexport * from './prefix'\nexport * from './modes'\nexport { join, tail } from './util'\nexport * from './helpers'\n"],
  "mappings": "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",
  "names": []
}
