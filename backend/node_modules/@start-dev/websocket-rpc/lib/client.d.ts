export default class WebsocketRpcClient {
    private readonly _getCsrfToken;
    private readonly _subscriptions;
    private readonly _methodCallResults;
    private readonly _inFlightMethodCalls;
    private _socket;
    private _socketReady;
    private _nextMessageID;
    private _requestQueue;
    constructor(getCsrfToken: () => Promise<string>, server: string);
    private _connect;
    private _getMessageID;
    private _authenticate;
    private _onAuthenticated;
    private _onAuthenticationRequired;
    private _onSubscriptionUpdate;
    private _onMethodCallResult;
    private _onMethodCallError;
    observableState<T>(moduleID: string, exportName: string, initialEtag: string, initialValue: T): {
        getValue: () => T;
        subscribe: (fn: (value: T) => void) => () => boolean;
    };
    asyncMethod<TArgs extends any[], TResult>(moduleID: string, exportName: string): (...args: TArgs) => Promise<TResult>;
}
